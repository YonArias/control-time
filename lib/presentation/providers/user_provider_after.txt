import 'package:flutter/foundation.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:time_control_app/data/models/user_model.dart';

class UserProvider with ChangeNotifier {
  UserModel? _usuario;

  UserModel? get usuario => _usuario;

  // Método para cargar el usuario desde SharedPreferences al inicio de la aplicación
  Future<void> cargarUsuario() async {
    final prefs = await SharedPreferences.getInstance();
    final uid = prefs.getString('id');
    final nombre = prefs.getString('name');
    final lastname = prefs.getString('lastname');
    final correo = prefs.getString('gmail');
    final rol = prefs.getString('rol');
    final isValidate = prefs.getBool('isValidate');

    //   final String id;
    // final String name;
    // final String rol;
    // final String gmail;
    // final bool isValidate;
    // final String transportId;

    if (uid != null &&
        nombre != null &&
        lastname != null &&
        correo != null &&
        rol != null) {
      _usuario = UserModel(
        //id: uid,
        name: nombre,
        lastname: lastname,
        gmail: correo,
        rol: rol,
        isValidate: isValidate ?? false,
      );
      notifyListeners();
    }
  }

  // Método para establecer y guardar el usuario
  void setUsuario(UserModel usuario) async {
    _usuario = usuario;

    final prefs = await SharedPreferences.getInstance();
    //prefs.setString('uid', usuario.id);
    prefs.setString('nombre', usuario.name);
    prefs.setString('lastname', usuario.lastname);
    prefs.setString('correo', usuario.gmail);
    prefs.setString('rol', usuario.rol);
    prefs.setBool('isValidate', usuario.isValidate);

    notifyListeners();
  }
}
